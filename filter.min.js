const impermaxFilter=(e,r,l=!1)=>{const o=[];document.querySelectorAll(".pairs-table-row").forEach(e=>o.push(e));const t=o.map(e=>e.querySelectorAll(".col")[2]).filter(e=>e).map(e=>[e.querySelectorAll("div")[0].innerHTML,e.querySelectorAll("div")[1].innerHTML].map(e=>parseFloat(e.split("%")[0])/100)),a=o.map(e=>e.querySelectorAll(".col")[3]).filter(e=>e).map(e=>[e.querySelectorAll("div")[0].innerHTML,e.querySelectorAll("div")[1].innerHTML].map(e=>parseFloat(e.split("%")[0])/100)),c=o.map(e=>e.querySelectorAll(".col-5 .percentage")).filter(e=>e).map(e=>parseFloat(e[0].innerHTML.split("%")[0])/100),n=o.map(e=>e.querySelector(".col-7 .symbols").innerHTML),p=o.map(e=>e.querySelector(".col-7 .amm-label").innerHTML),i=o.map(e=>e.href);let m=n.map((e,r)=>e.split("/").map((e,l)=>({token:e,pair:n[r],source:p[r],supply:t[r][l],borrow:a[r][l],farm:c[r],href:i[r],row:o[r]}))).reduce((e,r)=>[...e,...r],[]).filter(r=>e.includes(r.token));if(m=m.sort((e,l)=>"borrow"==r?e[r]-l[r]:l[r]-e[r]),l){document.querySelectorAll(".pairs-table-row").forEach(e=>e.remove());const e=document.querySelector(".pairs-table");m.forEach(r=>e.insertAdjacentElement("beforeend",r.row))}return m};
